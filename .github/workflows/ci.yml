# name: CI/CD

# on:
#   push:
#     branches: [ main, dev ]
#   pull_request:
#     branches: [ main, dev ]

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v3

#       - name: Set up Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: "3.11"

#       - name: Cache pip
#         uses: actions/cache@v3
#         with:
#           path: ~/.cache/pip
#           key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
#           restore-keys: |
#             ${{ runner.os }}-pip-

#       - name: Install dependencies
#         run: pip install --no-cache-dir -r requirements.txt

#       - name: Lint code
#         run: |
#           pip install flake8
#           flake8 . --exclude venv,migrations,__pycache__ --ignore=E501


#       - name: Run tests
#         run: python manage.py test

#       - name: Build Docker image
#         run: docker build -t django_auth0_test .

#       - name: Run Django container
#         run: docker run --rm -d -p 8000:8000 django_auth0_test

name: CI/CD

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: auth_service
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U user"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: pip install --no-cache-dir -r requirements.txt

      - name: Lint code
        run: |
          pip install flake8
          flake8 .

      - name: Install PostgreSQL client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Allow user to create DB
        env:
          PGPASSWORD: password
        run: |
          psql -h localhost -U user -d auth_service -c "ALTER USER \"user\" CREATEDB;"

      - name: Run tests
        env:
          POSTGRES_DB: auth_service
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
        run: python manage.py test

      - name: Build Docker image
        run: docker build -t django_auth0_test .

      - name: Run Django container
        run: docker run --rm -d -p 8000:8000 django_auth0_test
