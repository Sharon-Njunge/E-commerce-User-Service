name: CI/CD

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test:
    runs-on: ubuntu-latest

    env:
      DJANGO_SECRET_KEY: ${{ secrets.SECRET_KEY || 'insecure-ci-key' }}
      DJANGO_DEBUG: "0"
      ALLOWED_HOSTS: "localhost,127.0.0.1,testserver"

      DB_NAME: app_ci
      DB_USER: app
      DB_PASSWORD: app
      DB_HOST: 127.0.0.1
      DB_PORT: "5432"

      REDIS_HOST: 127.0.0.1
      REDIS_PORT: "6379"

      AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
      API_IDENTIFIER: ${{ secrets.API_IDENTIFIER }}
      ALGORITHMS: RS256

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: app
          POSTGRES_PASSWORD: app
          POSTGRES_DB: postgres
        ports: ["5432:5432"]
        options: >-
          --health-cmd="pg_isready -U app -d postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

      redis:
        image: redis:7-alpine
        ports: ["6379:6379"]
        options: >-
          --health-cmd="redis-cli ping || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest flake8

      - name: Wait for Postgres/Redis
        run: |
          for i in {1..30}; do nc -z 127.0.0.1 5432 && break; sleep 2; done
          for i in {1..30}; do nc -z 127.0.0.1 6379 && break; sleep 2; done

      - name: Create CI database
        env:
          PGPASSWORD: app
        run: |
          psql -h 127.0.0.1 -U app -d postgres -c "CREATE DATABASE \"${DB_NAME}\";" || true

      - name: Django system checks
        env:
          DJANGO_SETTINGS_MODULE: auth_service.settings
        run: |
          python manage.py check

      - name: Migrate
        env:
          DJANGO_SETTINGS_MODULE: auth_service.settings
        run: |
          python manage.py migrate --noinput

      - name: Lint
        run: flake8 . --exclude=migrations,venv,env --max-line-length=120

      - name: Tests
        env:
          DJANGO_SETTINGS_MODULE: auth_service.settings
        run: pytest -q

      - name: Build Docker image (pushes only)
        if: github.event_name == 'push'
        run: |
          docker build -t django_app:${{ github.sha }} .
